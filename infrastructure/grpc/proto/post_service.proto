syntax = "proto3";

option go_package = "github.com/XWS-BSEP-Tim-13/Dislinkt_PostService/infrastructure/grpc/proto";

package post;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service PostService{
  rpc Get(GetRequest) returns(GetResponse) {
    option (google.api.http) = {
      get: "/post/{id}"
    };
  }
  rpc GetAll(GetAllRequest) returns(GetAllResponse) {
    option (google.api.http) = {
      get: "/post"
    };
  }
  rpc GetByUser(GetByUserRequest) returns(GetAllResponse) {
    option (google.api.http) = {
      get: "/post/user/{username}"
    };
  }

  rpc DeletePost(GetRequest) returns (GetAllRequest){
    option(google.api.http) = {
      delete: "/post/{id}"
    };
  }

  rpc CreatePost(NewPostRequest) returns(NewPost) {
    option(google.api.http) = {
      post: "/post"
      body: "post"
    };
  }
  rpc ReactToPost(ReactionRequest) returns(ReactionResponse) {
    option (google.api.http) = {
      post: "/post/react"
      body: "reaction"
    };
  }

  rpc GetFeedPosts(FeedRequest)returns(FeedResponse){
    option(google.api.http) = {
      post: "/post/{page}/feed"
      body: "usernames"
    };
  }

  rpc GetFeedPostsAnonymous(FeedRequestAnonymous)returns(FeedResponse){}

  rpc CreateCommentOnPost(CommentRequest) returns(CommentResponse){
    option(google.api.http) = {
      post: "/post/{postId}/comment"
      body: "comment"
    };
  }

  rpc UploadImage(ImageRequest) returns(ImageResponse){
    option(google.api.http) = {
      post :"/post/upload-image"
      body: "image"
    };
  }

  rpc GetImage(ImageResponse) returns (ImageRequest){
    option(google.api.http) = {
      get :"/post/image/{imagePath}"
    };
  }

  rpc GetMessagesForUsers(GetByUserRequest) returns(MessageResponse){
    option(google.api.http) = {
      get :"/message/{username}"
    };
  }

  rpc GetMessagesForUser(GetAllRequest) returns(GetByUserResponse){
    option(google.api.http) = {
      get :"/message"
    };
  }

  rpc SaveMessage(SaveMessageRequest) returns(GetAllRequest){}

  rpc GetEvents(EventRequest)returns(Events){
    option(google.api.http) = {
      get: "/post/events",
    };
  }

  rpc SaveEvent(Event) returns(EventRequest){}
}

message ImageRequest{
    bytes image = 1;
}

message ImageResponse{
  string imagePath =1;
}

message FeedRequestAnonymous{
  int64 page =1;
}

message FeedRequest{
  int64 page =1;
  Usernames usernames = 2;
}

message FeedResponse{
  int64 page=1;
  int64 lastPage =2;
  repeated Post posts=3;
}

message Usernames{
  repeated string username=1;
}

message NewPostRequest {
  PostDto post = 1;
}

message NewPost {
  Post post = 1;
}

message CommentRequest {
  string postId = 1;
  CommentDto comment = 2;
}

message CommentResponse {
  string commentId = 1;
}


message GetRequest {
  string id = 1;
}

message GetResponse {
  Post post = 1;
}

message GetAllRequest {
}

message GetAllResponse {
  repeated Post posts = 1;
}

message GetByUserRequest {
  string username = 1;
}

message ReactionRequest {
  Reaction reaction = 1;
}

message ReactionResponse {
  string postId = 1;
}

message MessageResponse{
  MessageUsers messages=1;
}

message GetByUserResponse{
  repeated MessageUsers messages=1;
}

message Message{
  string id =5;
  string messageFrom =1;
  string messageTo = 2;
  string content =3;
  google.protobuf.Timestamp date = 4;
}

message MessageDto{
  string messageFrom =1;
  string messageTo = 2;
  string content =3;
}

message SaveMessageRequest{
  MessageDto message=1;
}

message MessageUsers{
  string id =1;
  string firstUser =2;
  string secondUser =3;
  repeated Message messages=4;
}

message EventRequest {
}

message Event {
  string id = 1;
  string action = 2;
  string user = 3;
  google.protobuf.Timestamp published = 4;
}

message Events {
  repeated Event events = 1;
}

message Reaction {
  string username = 1;
  string postId = 2;

  enum ReactionType {
    LIKE = 0;
    DISLIKE = 1;
  }

  ReactionType reactionType = 3;
}

message PostDto {
  string content = 1;
  string image   = 2;
  google.protobuf.Timestamp date = 3;
  string id = 4;
  string username = 5;
}

message Post {
  string id = 1;
  string username = 2;
  string content = 3;
  string image = 4;
  repeated string likes = 5;
  repeated string dislikes = 6;
  repeated Comment comments = 7;
  google.protobuf.Timestamp date = 8;
}

message CommentDto {
  string content = 1;
  string username = 2;
}

message Comment {
  string id = 1;
  string content = 2;
  google.protobuf.Timestamp date = 3;
  string username = 4;
}
